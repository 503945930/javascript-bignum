TODO:

* SchemeNumber: Reimplement using multiple dispatch: Foo.prototype.add
  = function(z) { return z.addFoo(this); };

* SchemeNumber: Make extension of Number.prototype the normal, default
  flonum implementation.

* Finish Scheme tower implementation: mantissa width, div0-and-mod0,
  rationalize.

* Document SchemeNumber.

* Port the BigRational tests to SchemeNumber.

* Look for a Scheme (R6RS) numeric test suite to hook up.

* Write more tests.  Set up input and output files like those for
  BigInteger.

* Discontinue development of BigRational.

* Offer SchemeNumber to HOP.  http://hop.inria.fr/

* New methods as per the ECMA spec for Number.prototype:
  toLocaleString, toFixed, toExponential, toPrecision.

* BigInteger: Consider having pow() reject non-integer arguments.

* Consider aliasing or renaming BigInteger.toString() so as not to
  conflict with the default toString().

* Consider exposing the library version like SchemeNumber.VERSION ===
  BigInteger.VERSION === "1.0"

* Consider a BigDecimal class akin to Java's BigDecimal.
