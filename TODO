TODO:

* sf["number->string"](Number.MIN_VALUE,16) loops.

* Add hooks to support correct exception semantics.

* Prefix new Number.prototype methods with "sn_" or similar.

* Reconsider the utility of (x instanceof SchemeNumber) versus the
  pain of sharing a namespace with Number; consider renaming
  SchemeNumber.fn, since it is also Number.fn.

* Announce on comp.lang.scheme.

* ECMA Number.prototype methods: toLocaleString, toFixed,
  toExponential, toPrecision.  Implement for exact numbers.

* Consider providing the option not to tamper with Number.prototype.

* BigInteger: Consider having pow() reject non-integer arguments.

* Consider aliasing or renaming BigInteger.toString() so as not to
  conflict with the default toString().

* Consider exposing the library version like SchemeNumber.VERSION ===
  BigInteger.VERSION === "1.0"

* Consider a BigDecimal class like Java's BigDecimal.
